node {
  // Mark the code checkout 'stage'....
  stage 'Checkout'

  // Checkout code from repository and update any submodules
  checkout scm
  // sh 'git submodule update --init'

  stage 'Clean'
  sh 'rm -r build'
  sh 'mkdir build'
  dir 'build'

  stage 'CMake config'
  sh 'cmake ..'

  stage 'Build'
  sh 'make'

  stage 'Test'
  sh './tests --gtest_output="xml:test-results.xml"'

  stage 'Test Analysis'
  junit 'test-result.xml'


  // //branch name from Jenkins environment variables
  // echo "My branch is: ${env.BRANCH_NAME}"
  //
  // def flavor = flavor(env.BRANCH_NAME)
  // echo "Building flavor ${flavor}"
  //
  // //build your gradle flavor, passes the current build number as a parameter to gradle
  // sh "./gradlew clean assemble${flavor}Debug -PBUILD_NUMBER=${env.BUILD_NUMBER}"
  //
  // stage 'Stage Archive'
  // //tell Jenkins to archive the apks
  // archiveArtifacts artifacts: 'app/build/outputs/apk/*.apk', fingerprint: true
  //
  // stage 'Stage Upload To Fabric'
  // sh "./gradlew crashlyticsUploadDistribution${flavor}Debug  -PBUILD_NUMBER=${env.BUILD_NUMBER}"
}
